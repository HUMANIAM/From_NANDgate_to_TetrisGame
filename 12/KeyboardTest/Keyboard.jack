// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int keyboard;

    /** Initializes the keyboard. */
    function void init() {
        let keyboard = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var int value;
        let value = Memory.peek(keyboard);
        if(value = 0){
            return 0;
        }
         return value;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char value;
        while(Keyboard.keyPressed() = 0){}
        let value = Memory.peek(keyboard);
        while(~(Keyboard.keyPressed() = 0)){}

        if(value = 128){
                do Output.println();
            }
        else{
            if(value = 129){
                do Output.backSpace();
            }
            else{
                do Output.printChar(value);
            } 
        }
        return value;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var char ch;
        var String s, newstr;
        var boolean ok;
        var int i, MaxLen, premax;

        let ok = false;
        let MaxLen = 50;
        let s = String.new(MaxLen);
        do Output.printString(message);

        while(~ok){
            let ch = Keyboard.readChar();
            //new line
            if(ch = 128){
                let ok = true;
            }
            else{
                //backspace 
                if((ch = 129) & (s.length()>0)){
                    do s.eraseLastChar();
                }
                else{
                    if(~(ch = 129) & (s.length()<MaxLen)){
                       let s = s.appendChar(ch); 
                    }
                    else{
                        //length of the string isn't sufficient so we create new string with double size
                        if(~(s.length()<MaxLen)){

                            let premax = MaxLen;
                            let MaxLen = MaxLen + MaxLen ;
                            let newstr = String.new(MaxLen);
                            let i = 0;

                            //copy s to newstr
                            while(i<premax){
                                let newstr = newstr.appendChar(s.charAt(i));
                                let i = i + 1;
                            }

                            do s.dispose();
                            let s = newstr;
                            let s = s.appendChar(ch);
                        }
                    }
                }
            }

        }
        return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String str;
        let str = Keyboard.readLine(message);
        return str.intValue(); 
    }
}
