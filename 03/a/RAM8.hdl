// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    //load or not load
    And(a=load, b=true, out=loadout);
    DMux8Way(in=loadout, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    
    //line up 8 register of length 16bit
    Register(in=in, load=a, out=outr0);
    Register(in=in, load=b, out=outr1);
    Register(in=in, load=c, out=outr2);
    Register(in=in, load=d, out=outr3);
    Register(in=in, load=e, out=outr4);
    Register(in=in, load=f, out=outr5);
    Register(in=in, load=g, out=outr6);
    Register(in=in, load=h, out=outr7);

    //if load =0 or 1
    Mux8Way16(a=outr0, b=outr1, c=outr2, d=outr3, e=outr4, f=outr5, g=outr6, h=outr7, sel=address, out=out);

    
}